;;; -*-Emacs-Lisp-*-
;;;
;;; $Id$
;;;

(defvar default-load-path load-path)
(setq load-path (append
		 (mapcar (function
			  (lambda (path)
			    (expand-file-name path default-directory)
			    ))
			 '("." "../emu" "../tl" "../bitmap-mule"
			   "../mu" "../mel"
			   "../emh" "../gnus-mime" "../rmail-mime")
			 )
		 load-path))

(require 'install)
(require 'cl)


;;; @ Please specify optional package directory if you use them.
;;;

;; It is only necessary to use `add-path' if these packages are not
;; already on the standard load-path of Emacs.

;; Function `get-latest-path' detect latest version of such package
;; under load-path directories. If you want to use a version of a
;; package instead of latest version, please specify by argument of
;; function `add-path'.

;; Function `add-path' finds path under load-path directories. If a
;; package does not exist in load-path, please specify by absolutely
;; (`~/' is available), for example
;;	(add-path "~/lib/elisp/mailcrypt-3.4")
;; or
;;	(add-path "/opt/share/xmule/site-lisp/mailcrypt-3.4")


;;; @@ Please specify Mailcrypt path.
;;;

;; Use latest version installed in load-path.

(let ((path (get-latest-path "mailcrypt" 'all-paths)))
  (if path
      (add-path path)
    ))

;; Or please specify path.
;; (add-path "mailcrypt-3.4" 'all-paths)


;;; @@ Please specify BBDB path.
;;;

(let ((path (get-latest-path "bbdb" 'all-paths)))
  (if path
      (add-path path)
    ))

;; Or please specify path.
;; (add-path "bbdb-1.50" 'all-paths)


;;; @ shell
;;;

;; Please specify shell command path.
(setq SHELL
      (find-if (function file-exists-p)
	       '("/bin/sh" "/usr/bin/sh")
	       ))

;; Please specify shell command option.
(setq SHELLOPTION "-c")


;;; @ Please specify prefix of install directory.
;;;

;; Please specify install path prefix.
;; If it is omitted, shared directory (maybe /usr/local is used).
(defvar PREFIX install-prefix)
;;(setq PREFIX "~/")

;; Please specify install path prefix for binaries.
(defvar EXEC_PREFIX
  (if (or running-emacs-18 running-xemacs)
      (expand-file-name "../../.." exec-directory)
    (expand-file-name "../../../.." exec-directory)
    ))

;; Please specify prefix for ``bitmap-mule'' [optional]
(setq BITMAP_PREFIX "bitmap")

;; Please specify MU prefix [optional]
(setq MU_PREFIX "mu")

;; Please specify MEL prefix [optional]
(setq MEL_PREFIX "mel")

;; Please specify SEMI prefix [optional]
(setq SEMI_PREFIX "semi")

;; lisp files of SEMI are installed into following directory tree:
;;
;;	<LISPDIR> = <PREFIX>/DATA_PREFIX/<install-elisp-prefix>/
;;	<LISPDIR>/mime-setup.{el|elc}
;;	<LISPDIR>/<BITMAP_PREFIX>/	--- bitmap lisp files
;;	<LISPDIR>/<MU_PREFIX>/		--- MU lisp files
;;	<LISPDIR>/<MEL_PREFIX>/		--- MEL lisp files
;;	<LISPDIR>/<SEMI_PREFIX>/	--- SEMI lisp files
;;
;; For example, if <PREFIX> = "/usr/local" and you use Emacs 19.34,
;;
;;	<LISPDIR> = /usr/local/share/emacs/site-lisp/
;;	/usr/local/share/emacs/site-lisp/mime-setup.{el|elc}
;;	/usr/local/share/emacs/site-lisp/	--- tl  lisp files
;;	/usr/local/share/emacs/site-lisp/mu/	--- MU lisp files
;;	/usr/local/share/emacs/site-lisp/mel/	--- MEL lisp files
;;	/usr/local/share/emacs/site-lisp/semi/	--- SEMI lisp files
;;
;; For example, if <PREFIX> = "~/" and you use XEmacs,
;;
;;	<LISPDIR> = ~/share/xemacs/site-lisp/
;;	~/lib/xemacs/site-lisp/mime-setup.{el|elc}
;;	~/lib/xemacs/site-lisp/tl/  --- tl  lisp files
;;	~/lib/xemacs/site-lisp/mu/  --- MU  lisp files
;;	~/lib/xemacs/site-lisp/mel/ --- MEL lisp files
;;	~/lib/xemacs/site-lisp/semi/ --- SEMI lisp files


;;; @ executables
;;;

;; Please specify binary path.
(defvar BIN_DIR (expand-file-name "bin" EXEC_PREFIX))

;; Please specify binary path. (for external method scripts)
(setq METHOD_DIR (expand-file-name "share/semi" PREFIX))




;;; @ optional settings
;;;

;; It is generated by automatically. Please set variable `PREFIX'.
;; If you don't like default directory tree, please set it.
(defvar LISPDIR (install-detect-elisp-directory PREFIX))
;; (setq install-default-elisp-directory "~/lib/emacs/lisp")

(setq BITMAP_DIR	(expand-file-name BITMAP_PREFIX	LISPDIR))
(setq MU_DIR		(expand-file-name MU_PREFIX	LISPDIR))
(setq MEL_DIR		(expand-file-name MEL_PREFIX	LISPDIR))
(setq SEMI_KERNEL_DIR	(expand-file-name SEMI_PREFIX	LISPDIR))
(setq SETUP_FILE_DIR	SEMI_KERNEL_DIR)
(setq EMH_DIR		SEMI_KERNEL_DIR)
(setq Gnus_MIME_DIR	SEMI_KERNEL_DIR)
(setq RMAIL_MIME_DIR	SEMI_KERNEL_DIR)
(setq SEMI_VM_DIR	SEMI_KERNEL_DIR)

(cond ((member LISPDIR default-load-path)
       (setq BITMAP_RELATIVE_DIR	BITMAP_PREFIX)
       (setq MU_RELATIVE_DIR		MU_PREFIX)
       (setq MEL_RELATIVE_DIR		MEL_PREFIX)
       (setq SEMI_KERNEL_RELATIVE_DIR	SEMI_PREFIX)
       )
      ((string-match (concat "^" (regexp-quote (expand-file-name "~/")))
		     LISPDIR)
       (setq BITMAP_RELATIVE_DIR
	     (concat "~/" (file-relative-name BITMAP_DIR "~/"))
	     )
       (setq MU_RELATIVE_DIR
	     (concat "~/" (file-relative-name MU_DIR "~/"))
	     )
       (setq MEL_RELATIVE_DIR
	     (concat "~/" (file-relative-name MEL_DIR "~/"))
	     )
       (setq SEMI_KERNEL_RELATIVE_DIR
	     (concat "~/" (file-relative-name SEMI_KERNEL_DIR "~/"))
	     )
       )
      (t
       (setq BITMAP_RELATIVE_DIR	BITMAP_DIR)
       (setq MU_RELATIVE_DIR		MU_DIR)
       (setq MEL_RELATIVE_DIR		MEL_DIR)
       (setq SEMI_KERNEL_RELATIVE_DIR	SEMI_KERNEL_DIR)
       ))
(setq EMH_RELATIVE_DIR		SEMI_KERNEL_RELATIVE_DIR)
(setq Gnus_MIME_RELATIVE_DIR	SEMI_KERNEL_RELATIVE_DIR)

(setq METHOD_SRC_DIR "methods")
(setq METHODS
      '("tm-au" "tm-file" "tm-html" "tm-image" "tm-mpeg"
	"tm-plain" "tm-ps"
	"tmdecode"))

;;; SEMI-CFG ends here
